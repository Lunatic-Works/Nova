@<|
label 'test_transition'
is_debug()
|>
<|
show(xiben, 'normal', pos_l)
show(bg, 'room')
set_box()
|>
测试转场

<|
anim:trans(cam, function()
        hide(xiben)
        show(gaotian, 'normal', pos_r)
        show(bg, 'corridor')
    end, 'fade', 1, { _Mask = 'Masks/eye' })
|>
第一类转场
前一幅画面渐变到后一幅画面

<|
anim:trans2(cam, function()
        hide(gaotian)
        show(xiben, 'normal', pos_l)
        show(bg, 'room')
    end, 'broken_tv', 1)
|>
第二类转场
先让前一幅画面消失，再让后一幅画面出现

<|
anim:vfx(cam, 'color', {0, 1}, 1, { _ColorMul = 0 })
|>
用两条对话完成的转场
先让画面变黑

<|
-- 不在trans里的时候，角色的show和hide默认有零点几秒的淡入淡出动画
-- 现在我们不需要这个动画，就要用auto_fade_off()和auto_fade_on()
auto_fade_off()
hide(xiben)
show(gaotian, 'normal', pos_r)
show(xiben, 'normal', pos_l)
show(bg, 'corridor')
auto_fade_on()
anim:vfx(cam, 'color', {1, 0}, 1, { _ColorMul = 0 })
|>
再让画面出现

<|
anim:vfx(bg, 'mix_add', {0, 1}, 1, { _Mask = 'Masks/vertical' })
|>
给背景加特效

背景特效持续

<|
anim:vfx(bg, 'mix_add', {1, 0}, 1, { _Mask = 'Masks/vertical' })
|>
背景特效结束

<|
anim:vfx(gaotian, 'lens_blur', {0, 1}, 1, { _Size = 4 })
|>
给立绘加特效

立绘特效持续

<|
anim:vfx(gaotian, 'lens_blur', {1, 0}, 1, { _Size = 4 })
|>
立绘特效结束

<|
anim:vfx(cam, 'lens_blur', {0, 1}, 1, { _Size = 4 })
|>
给摄像机加特效

摄像机特效持续

<|
anim:vfx(cam, 'lens_blur', {1, 0}, 1, { _Size = 4 })
|>
摄像机特效结束

<|
-- 先把gaotian和fg的layer设为cam2的layer，再给cam_mask加vfx
gaotian.layer = cam2_overlay
fg.layer = cam2_layer
show(xiben, 'normal', pos_l)
show(bg, 'room')
show(gaotian, 'normal', pos_r)
show(fg, 'moon_halo')
cam2.cameraEnabled = true
anim:vfx(cam_mask, 'fade', {0, 0.5}, 1, { _SubTex = 'RenderTargets/GameCamera2Texture', _Mask = 'Masks/wipe_left', _Vague = 0.1 })
|>
测试遮罩

<|
anim:vfx(cam, 'broken_tv', {0, 0.5}, 1)
|>
给摄像机1加特效

<|
anim:vfx(cam, 'broken_tv', {0.5, 0}, 1)
|>
摄像机1特效结束

<|
anim:vfx(cam2, 'broken_tv', {0, 0.5}, 1)
|>
给摄像机2加特效

<|
anim:vfx(cam2, 'broken_tv', {0.5, 0}, 1)
|>
摄像机2特效结束

<|
-- 把gaotian和fg的layer重置为cam1的layer，并把cam2的cullingMask设为cam1的cullingMask
gaotian.layer = cam1_overlay
fg.layer = cam1_layer
cam2.cullingMask = (2^cam1_layer) + (2^cam1_overlay)
hide(fg)
anim:move(cam2, {-3, 0})
|>
也可以让两个摄像机拍同一个图层

<|
anim:vfx(cam, 'broken_tv', {0, 0.5}, 1)
|>
给摄像机1加特效

<|
anim:vfx(cam, 'broken_tv', {0.5, 0}, 1)
|>
摄像机1特效结束

<|
anim:vfx(cam2, 'broken_tv', {0, 0.5}, 1)
|>
给摄像机2加特效

<|
anim:vfx(cam2, 'broken_tv', {0.5, 0}, 1)
|>
摄像机2特效结束

<|
anim:vfx(cam_mask, 'fade', {0.5, 0}, 1, { _SubTex = 'RenderTargets/GameCamera2Texture', _Mask = 'Masks/wipe_left', _Vague = 0.1 })
|>
遮罩结束

<|
cam2.cullingMask = (2^cam2_layer) + (2^cam2_overlay)
cam2.cameraEnabled = false
|>
重置cam2的cullingMask，关闭cam2

<|
anim:vfx_multi(cam, 'lens_blur', 1, { _Size = {0, 4}, _Offset = {0, 0.5} })
|>
测试多个属性的特效动画

<|
anim:vfx_multi(cam, 'lens_blur', 1, { _Size = {4, 0}, _Offset = {0.5, 0} }
    ):action(vfx, cam, nil)
|>
特效结束

测试结束
@<| is_end() |>
